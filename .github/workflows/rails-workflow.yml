name: Ruby Rails CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'highscores-api/**'
      - '.github/workflows/rails-workflow.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'highscores-api/**'

jobs:
  build-and-test-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.5
          bundler-cache: false
          working-directory: highscores-api

      - name: Install Dependencies
        working-directory: highscores-api
        run: |
          bundle config set --local deployment false
          bundle install

      - name: Run Tests
        working-directory: highscores-api
        run: |
          bundle exec rspec || bundle exec rails test

  deploy:
    needs: build-and-test-server
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/github_actions_key
          chmod 600 ~/.ssh/github_actions_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Increase SSH timeout
        run: |
          echo "ServerAliveInterval 60" >> ~/.ssh/config
          echo "ServerAliveCountMax 120" >> ~/.ssh/config

      - name: Deploy to EC2 - Install Git
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo dnf install -y git"

      - name: Deploy to EC2 - Setup Directory
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/app"

      - name: Deploy to EC2 - Clone Repository
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/app && (if [ -d 'devops-project-team9' ]; then cd devops-project-team9 && git fetch && git reset --hard origin/main; else git clone https://github.com/adamm0019/devops-project-team9.git; fi)"

      - name: Deploy to EC2 - Install Dependencies
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo dnf update -y && sudo dnf install -y --skip-broken sqlite sqlite-devel zlib-devel && sudo dnf group install -y 'Development Tools' && sudo dnf install -y --skip-broken libffi-devel libxml2-devel libxslt-devel nodejs npm ncurses-devel autoconf libtool"

      - name: Deploy to EC2 - Install rbenv
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "if ! command -v rbenv &> /dev/null; then git clone https://github.com/rbenv/rbenv.git ~/.rbenv && git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build && echo 'export PATH=\"\$HOME/.rbenv/bin:\$PATH\"' >> ~/.bashrc && echo 'eval \"\$(rbenv init -)\"' >> ~/.bashrc; fi"

      - name: Deploy to EC2 - Set up PATH
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\""

      - name: Deploy to EC2 - Install Ruby
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\" && if ! ~/.rbenv/bin/rbenv versions | grep -q '3.3.5'; then ~/.rbenv/bin/rbenv install 3.3.5; fi && ~/.rbenv/bin/rbenv global 3.3.5 && echo \"Using \$(~/.rbenv/shims/ruby -v)\""

      - name: Deploy to EC2 - Install Bundler
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\" && ~/.rbenv/shims/gem install bundler"

      - name: Deploy to EC2 - Setup Rails App
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/app/devops-project-team9/highscores-api && mkdir -p config && echo \"$RAILS_MASTER_KEY\" > config/master.key && chmod 600 config/master.key && mkdir -p db storage log tmp/pids && chmod -R 755 ."

      - name: Deploy to EC2 - Bundle Install
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/app/devops-project-team9/highscores-api && export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\" && ~/.rbenv/shims/bundle install --jobs=4 --retry=3"

      - name: Deploy to EC2 - Run Migrations
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/app/devops-project-team9/highscores-api && export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\" && RAILS_ENV=production RAILS_MASTER_KEY=\"$RAILS_MASTER_KEY\" ~/.rbenv/shims/bundle exec rails db:migrate || echo \"Migration failed but continuing\""

      - name: Deploy to EC2 - Setup systemd service - Create file
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo rm -f /etc/systemd/system/highscores-api.service"

      - name: Deploy to EC2 - Setup systemd service - Unit section
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"[Unit]\" > /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Description=Highscores Rails API\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"After=network.target\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"\" >> /etc/systemd/system/highscores-api.service'"

      - name: Deploy to EC2 - Setup systemd service - Service section
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"[Service]\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Type=simple\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"User=${{ secrets.EC2_USER }}\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"WorkingDirectory=/home/${{ secrets.EC2_USER }}/app/devops-project-team9/highscores-api\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"ExecStart=/home/${{ secrets.EC2_USER }}/.rbenv/shims/bundle exec rails server -e production -p 3000 -b 0.0.0.0\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Restart=on-failure\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Environment=RAILS_ENV=production\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Environment=RAILS_MASTER_KEY=$RAILS_MASTER_KEY\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"Environment=RAILS_SERVE_STATIC_FILES=true\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"StandardOutput=append:/var/log/highscores-api.log\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"StandardError=append:/var/log/highscores-api.error.log\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"\" >> /etc/systemd/system/highscores-api.service'"

      - name: Deploy to EC2 - Setup systemd service - Install section
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"[Install]\" >> /etc/systemd/system/highscores-api.service'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"WantedBy=multi-user.target\" >> /etc/systemd/system/highscores-api.service'"

      - name: Deploy to EC2 - Setup log files
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo touch /var/log/highscores-api.log && sudo touch /var/log/highscores-api.error.log && sudo chown ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /var/log/highscores-api.*"

      - name: Deploy to EC2 - Install Nginx
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo dnf install -y nginx"

      - name: Deploy to EC2 - Configure Nginx - Remove old config
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo rm -f /etc/nginx/conf.d/highscores-api.conf"

      - name: Deploy to EC2 - Configure Nginx - Create config
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"server {\" > /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"    listen 80;\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"    server_name _;\n\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"    location / {\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"        proxy_pass http://localhost:3000;\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"        proxy_set_header X-Real-IP \\\$remote_addr;\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"        proxy_set_header X-Forwarded-For \\\$proxy_add_x_forwarded_for;\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"        proxy_set_header X-Forwarded-Proto \\\$scheme;\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"    }\" >> /etc/nginx/conf.d/highscores-api.conf'"
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo bash -c 'echo \"}\" >> /etc/nginx/conf.d/highscores-api.conf'"

      - name: Deploy to EC2 - Clean default Nginx config
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo rm -f /etc/nginx/conf.d/default.conf"

      - name: Deploy to EC2 - Restart Nginx
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl restart nginx"

      - name: Deploy to EC2 - Reload systemd
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl daemon-reload"

      - name: Deploy to EC2 - Enable and start service
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl enable highscores-api && sudo systemctl restart highscores-api && sleep 5 && sudo systemctl status highscores-api || true"

      - name: Deploy to EC2 - Manual start if needed
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          ssh -i ~/.ssh/github_actions_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "if ! sudo systemctl is-active --quiet highscores-api; then cd ~/app/devops-project-team9/highscores-api && export PATH=\"\$HOME/.rbenv/bin:\$PATH\" && eval \"\$(~/.rbenv/bin/rbenv init -)\" && RAILS_ENV=production RAILS_MASTER_KEY=\"$RAILS_MASTER_KEY\" nohup ~/.rbenv/shims/bundle exec rails server -p 3000 -b 0.0.0.0 > ~/rails.log 2>&1 & echo \"Server started in background\"; fi"